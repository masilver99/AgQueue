<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NWorkQueue.Sqlite</name>
    </assembly>
    <members>
        <member name="T:NWorkQueue.Sqlite.StorageSqlLite">
            <summary>
            Implements the IStorage interface for storing and retriving queue date to SQLite.
            </summary>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.InitializeStorage(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.GetMaxTransactionId">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.StartTransaction(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.AddQueue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.DeleteQueue(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.GetQueueInfoByName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.GetQueueInfoById(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.Execute``1(System.Func{Microsoft.Data.Sqlite.SqliteConnection,System.Threading.Tasks.ValueTask{``0}},Microsoft.Data.Sqlite.SqliteConnection)">
            <summary>
            Executes an anonymous method wrapped with robust logging, command line options loading, and error handling
            </summary>
            <typeparam name="TOptions">Options class to load from command line</typeparam>
            <param name="programName">name of the executing program</param>
            <param name="args">Command line arguments</param>
            <param name="action">The anonymous method to execute. Contains a logging object and the options object, both of which can be accessed in the anonymous method.
            The method must be async.</param>
            <returns>returns an async Task</returns>
        </member>
    </members>
</doc>
