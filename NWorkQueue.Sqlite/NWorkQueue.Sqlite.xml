<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NWorkQueue.Sqlite</name>
    </assembly>
    <members>
        <member name="T:NWorkQueue.Sqlite.DbTransaction">
            <summary>
            Wrapper around SQLite transaction.  Used by storage classes
            </summary>
        </member>
        <member name="M:NWorkQueue.Sqlite.DbTransaction.#ctor(Microsoft.Data.Sqlite.SqliteConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:NWorkQueue.Sqlite.DbTransaction"/> class.
            </summary>
            <param name="connection">SQLite connection</param>
        </member>
        <member name="P:NWorkQueue.Sqlite.DbTransaction.SqliteTransaction">
            <summary>
            Gets the internal SQLite transaction
            </summary>
        </member>
        <member name="M:NWorkQueue.Sqlite.DbTransaction.Commit">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.DbTransaction.Rollback">
            <inheritdoc/>
        </member>
        <member name="T:NWorkQueue.Sqlite.StorageSqlLite">
            <summary>
            Implements the IStorage interface for storing and retriving queue date to SQLite
            </summary>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.InitializeStorage(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.GetMaxTransactionId">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.StartTransaction(System.Int64,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.GetTransactionById(System.Int64,NWorkQueue.Common.IStorageTransaction)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.ExtendTransaction(System.Int64,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.BeginStorageTransaction">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.CloseTransaction(System.Int64,NWorkQueue.Common.IStorageTransaction,System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.CommitMessageTransaction(System.Int64,NWorkQueue.Common.IStorageTransaction,System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.GetMaxQueueId">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.AddQueue(System.Int64,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.DeleteQueue(System.Int64,NWorkQueue.Common.IStorageTransaction)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.GetQueueId(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.DoesQueueExist(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.GetMaxMessageId">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.DeleteMessagesByTransId(System.Int64,NWorkQueue.Common.IStorageTransaction)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.CloseRetriedMessages(System.Int64,NWorkQueue.Common.IStorageTransaction,System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.ExpireOlderMessages(System.Int64,NWorkQueue.Common.IStorageTransaction,System.DateTime,System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.UpdateRetriesOnRollbackedMessages(System.Int64,NWorkQueue.Common.IStorageTransaction)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.CommitAddedMessages(System.Int64,NWorkQueue.Common.IStorageTransaction)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.CommitPulledMessages(System.Int64,NWorkQueue.Common.IStorageTransaction,System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.GetMessageCount(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.AddMessage(System.Int64,NWorkQueue.Common.IStorageTransaction,System.Int64,System.Int64,System.Byte[],System.DateTime,System.String,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.NWorkQueue#Common#IStorage#DeleteMessagesByQueueId(System.Int64,NWorkQueue.Common.IStorageTransaction)">
            <inheritdoc/>
        </member>
        <member name="M:NWorkQueue.Sqlite.StorageSqlLite.System#IDisposable#Dispose">
            <inheritdoc/>
        </member>
    </members>
</doc>
