// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: NWorkQueue.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NWorkQueue.Models {

  /// <summary>Holder for reflection information generated from NWorkQueue.proto</summary>
  public static partial class NWorkQueueReflection {

    #region Descriptor
    /// <summary>File descriptor for NWorkQueue.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NWorkQueueReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBOV29ya1F1ZXVlLnByb3RvEgVncmVldBofZ29vZ2xlL3Byb3RvYnVmL3Rp",
            "bWVzdGFtcC5wcm90byJPChRHZXRRdWV1ZUluZm9SZXNwb25zZRITCgtSZWNv",
            "cmRGb3VuZBgBIAEoCBIPCgdRdWV1ZUlkGAIgASgDEhEKCVF1ZXVlTmFtZRgD",
            "IAEoCSIuChlHZXRRdWV1ZUluZm9CeU5hbWVSZXF1ZXN0EhEKCVF1ZXVlTmFt",
            "ZRgBIAEoCSIqChdHZXRRdWV1ZUluZm9CeUlkUmVxdWVzdBIPCgdRdWV1ZUlk",
            "GAEgASgDIicKEkNyZWF0ZVF1ZXVlUmVxdWVzdBIRCglRdWV1ZU5hbWUYASAB",
            "KAkiOQoTQ3JlYXRlUXVldWVSZXNwb25zZRIPCgdRdWV1ZUlkGAEgASgDEhEK",
            "CVF1ZXVlTmFtZRgCIAEoCSI2ChhJbml0aWFsaXplU3RvcmFnZVJlcXVlc3QS",
            "GgoSRGVsZXRlRXhpc3RpbmdEYXRhGAEgASgIIhsKGUluaXRpYWxpemVTdG9y",
            "YWdlUmVzcG9uc2UiKQoWRGVsZXRlUXVldWVCeUlkUmVxdWVzdBIPCgdRdWV1",
            "ZUlkGAEgASgDIhkKF0RlbGV0ZVF1ZXVlQnlJZFJlc3BvbnNlIi0KGERlbGV0",
            "ZVF1ZXVlQnlOYW1lUmVxdWVzdBIRCglRdWV1ZU5hbWUYASABKAkiGwoZRGVs",
            "ZXRlUXVldWVCeU5hbWVSZXNwb25zZSIuChdTdGFydFRyYW5zYWN0aW9uUmVx",
            "dWVzdBITCgtFeHBpcmVJbk1pbhgBIAEoBSIrChhTdGFydFRyYW5zYWN0aW9u",
            "UmVzcG9uc2USDwoHVHJhbnNJZBgBIAEoAyIrChhDb21taXRUcmFuc2FjdGlv",
            "blJlcXVlc3QSDwoHVHJhbnNJZBgBIAEoAyJKChlDb21taXRUcmFuc2FjdGlv",
            "blJlc3BvbnNlEhUKDU1lc3NhZ2VzQWRkZWQYASABKAUSFgoOTWVzc2FnZXNQ",
            "dWxsZWQYAiABKAUiLQoaUm9sbGJhY2tUcmFuc2FjdGlvblJlcXVlc3QSDwoH",
            "VHJhbnNJZBgBIAEoAyIdChtSb2xsYmFja1RyYW5zYWN0aW9uUmVzcG9uc2Ui",
            "SQoTUXVldWVNZXNzYWdlUmVxdWVzdBIPCgdUcmFuc0lkGAEgASgDEiEKB01l",
            "c3NhZ2UYAiABKAsyEC5ncmVldC5NZXNzYWdlSW4iqAEKCU1lc3NhZ2VJbhIP",
            "CgdRdWV1ZUlkGAEgASgDEg8KB1BheWxvYWQYAiABKAwSEAoITWV0YURhdGEY",
            "AyABKAkSEAoIUHJpb3JpdHkYBCABKAUSEgoKTWF4UmV0cmllcxgFIAEoBRIX",
            "Cg9FeHBpcnlJbk1pbnV0ZXMYBiABKAUSFQoNQ29ycmVsYXRpb25JZBgHIAEo",
            "BRIRCglHcm91cE5hbWUYCCABKAkikwMKCk1lc3NhZ2VPdXQSDwoHUXVldWVJ",
            "ZBgBIAEoAxIPCgdQYXlsb2FkGAIgASgMEhAKCE1ldGFEYXRhGAMgASgJEhAK",
            "CFByaW9yaXR5GAQgASgFEhIKCk1heFJldHJpZXMYBSABKAUSMgoORXhwaXJ5",
            "RGF0ZVRpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhUK",
            "DUNvcnJlbGF0aW9uSWQYByABKAUSEQoJR3JvdXBOYW1lGAggASgJEikKDE1l",
            "c3NhZ2VTdGF0ZRgJIAEoDjITLmdyZWV0Lk1lc3NhZ2VTdGF0ZRIvCgtBZGRE",
            "YXRlVGltZRgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMQoN",
            "Q2xvc2VEYXRlVGltZRgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXASDwoHVHJhbnNJZBgMIAEoAxItCgtUcmFuc0FjdGlvbhgNIAEoDjIYLmdy",
            "ZWV0LlRyYW5zYWN0aW9uQWN0aW9uIjoKFFF1ZXVlTWVzc2FnZVJlc3BvbnNl",
            "Eg8KB1RyYW5zSWQYASABKAMSEQoJTWVzc2FnZUlkGAIgASgDIjYKElB1bGxN",
            "ZXNzYWdlUmVxdWVzdBIPCgdRdWV1ZUlkGAEgASgDEg8KB1RyYW5zSWQYAiAB",
            "KAMiSgoTUHVsbE1lc3NhZ2VSZXNwb25zZRIPCgdUcmFuc0lkGAEgASgDEiIK",
            "B01lc3NhZ2UYAiABKAsyES5ncmVldC5NZXNzYWdlT3V0IiUKElBlZWtNZXNz",
            "YWdlUmVxdWVzdBIPCgdRdWV1ZUlkGAEgASgDIhUKE1BlZWtNZXNzYWdlUmVz",
            "cG9uc2UqXAoMTWVzc2FnZVN0YXRlEgoKBkFjdGl2ZRAAEhEKDUluVHJhbnNh",
            "Y3Rpb24QARINCglQcm9jZXNzZWQQAhILCgdFeHBpcmVkEAMSEQoNUmV0cnlF",
            "eGNlZWRlZBAEKiYKEVRyYW5zYWN0aW9uQWN0aW9uEgcKA0FkZBAAEggKBFB1",
            "bGwQATLZBwoIUXVldWVBcGkSRAoLQ3JlYXRlUXVldWUSGS5ncmVldC5DcmVh",
            "dGVRdWV1ZVJlcXVlc3QaGi5ncmVldC5DcmVhdGVRdWV1ZVJlc3BvbnNlElYK",
            "EUluaXRpYWxpemVTdG9yYWdlEh8uZ3JlZXQuSW5pdGlhbGl6ZVN0b3JhZ2VS",
            "ZXF1ZXN0GiAuZ3JlZXQuSW5pdGlhbGl6ZVN0b3JhZ2VSZXNwb25zZRJQCg9E",
            "ZWxldGVRdWV1ZUJ5SWQSHS5ncmVldC5EZWxldGVRdWV1ZUJ5SWRSZXF1ZXN0",
            "Gh4uZ3JlZXQuRGVsZXRlUXVldWVCeUlkUmVzcG9uc2USVgoRRGVsZXRlUXVl",
            "dWVCeU5hbWUSHy5ncmVldC5EZWxldGVRdWV1ZUJ5TmFtZVJlcXVlc3QaIC5n",
            "cmVldC5EZWxldGVRdWV1ZUJ5TmFtZVJlc3BvbnNlEk8KEEdldFF1ZXVlSW5m",
            "b0J5SWQSHi5ncmVldC5HZXRRdWV1ZUluZm9CeUlkUmVxdWVzdBobLmdyZWV0",
            "LkdldFF1ZXVlSW5mb1Jlc3BvbnNlElMKEkdldFF1ZXVlSW5mb0J5TmFtZRIg",
            "LmdyZWV0LkdldFF1ZXVlSW5mb0J5TmFtZVJlcXVlc3QaGy5ncmVldC5HZXRR",
            "dWV1ZUluZm9SZXNwb25zZRJTChBTdGFydFRyYW5zYWN0aW9uEh4uZ3JlZXQu",
            "U3RhcnRUcmFuc2FjdGlvblJlcXVlc3QaHy5ncmVldC5TdGFydFRyYW5zYWN0",
            "aW9uUmVzcG9uc2USVgoRQ29tbWl0VHJhbnNhY3Rpb24SHy5ncmVldC5Db21t",
            "aXRUcmFuc2FjdGlvblJlcXVlc3QaIC5ncmVldC5Db21taXRUcmFuc2FjdGlv",
            "blJlc3BvbnNlElsKElJvbGxiYWNrVHJhbmFjdGlvbhIhLmdyZWV0LlJvbGxi",
            "YWNrVHJhbnNhY3Rpb25SZXF1ZXN0GiIuZ3JlZXQuUm9sbGJhY2tUcmFuc2Fj",
            "dGlvblJlc3BvbnNlEkcKDFF1ZXVlTWVzc2FnZRIaLmdyZWV0LlF1ZXVlTWVz",
            "c2FnZVJlcXVlc3QaGy5ncmVldC5RdWV1ZU1lc3NhZ2VSZXNwb25zZRJFCgxQ",
            "dWxsTWVzc2FnZXMSGS5ncmVldC5QdWxsTWVzc2FnZVJlcXVlc3QaGi5ncmVl",
            "dC5QdWxsTWVzc2FnZVJlc3BvbnNlEkUKDFBlZWtNZXNzYWdlcxIZLmdyZWV0",
            "LlBlZWtNZXNzYWdlUmVxdWVzdBoaLmdyZWV0LlBlZWtNZXNzYWdlUmVzcG9u",
            "c2VCFKoCEU5Xb3JrUXVldWUuTW9kZWxzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::NWorkQueue.Models.MessageState), typeof(global::NWorkQueue.Models.TransactionAction), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.GetQueueInfoResponse), global::NWorkQueue.Models.GetQueueInfoResponse.Parser, new[]{ "RecordFound", "QueueId", "QueueName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.GetQueueInfoByNameRequest), global::NWorkQueue.Models.GetQueueInfoByNameRequest.Parser, new[]{ "QueueName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.GetQueueInfoByIdRequest), global::NWorkQueue.Models.GetQueueInfoByIdRequest.Parser, new[]{ "QueueId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.CreateQueueRequest), global::NWorkQueue.Models.CreateQueueRequest.Parser, new[]{ "QueueName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.CreateQueueResponse), global::NWorkQueue.Models.CreateQueueResponse.Parser, new[]{ "QueueId", "QueueName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.InitializeStorageRequest), global::NWorkQueue.Models.InitializeStorageRequest.Parser, new[]{ "DeleteExistingData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.InitializeStorageResponse), global::NWorkQueue.Models.InitializeStorageResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.DeleteQueueByIdRequest), global::NWorkQueue.Models.DeleteQueueByIdRequest.Parser, new[]{ "QueueId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.DeleteQueueByIdResponse), global::NWorkQueue.Models.DeleteQueueByIdResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.DeleteQueueByNameRequest), global::NWorkQueue.Models.DeleteQueueByNameRequest.Parser, new[]{ "QueueName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.DeleteQueueByNameResponse), global::NWorkQueue.Models.DeleteQueueByNameResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.StartTransactionRequest), global::NWorkQueue.Models.StartTransactionRequest.Parser, new[]{ "ExpireInMin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.StartTransactionResponse), global::NWorkQueue.Models.StartTransactionResponse.Parser, new[]{ "TransId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.CommitTransactionRequest), global::NWorkQueue.Models.CommitTransactionRequest.Parser, new[]{ "TransId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.CommitTransactionResponse), global::NWorkQueue.Models.CommitTransactionResponse.Parser, new[]{ "MessagesAdded", "MessagesPulled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.RollbackTransactionRequest), global::NWorkQueue.Models.RollbackTransactionRequest.Parser, new[]{ "TransId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.RollbackTransactionResponse), global::NWorkQueue.Models.RollbackTransactionResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.QueueMessageRequest), global::NWorkQueue.Models.QueueMessageRequest.Parser, new[]{ "TransId", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.MessageIn), global::NWorkQueue.Models.MessageIn.Parser, new[]{ "QueueId", "Payload", "MetaData", "Priority", "MaxRetries", "ExpiryInMinutes", "CorrelationId", "GroupName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.MessageOut), global::NWorkQueue.Models.MessageOut.Parser, new[]{ "QueueId", "Payload", "MetaData", "Priority", "MaxRetries", "ExpiryDateTime", "CorrelationId", "GroupName", "MessageState", "AddDateTime", "CloseDateTime", "TransId", "TransAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.QueueMessageResponse), global::NWorkQueue.Models.QueueMessageResponse.Parser, new[]{ "TransId", "MessageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.PullMessageRequest), global::NWorkQueue.Models.PullMessageRequest.Parser, new[]{ "QueueId", "TransId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.PullMessageResponse), global::NWorkQueue.Models.PullMessageResponse.Parser, new[]{ "TransId", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.PeekMessageRequest), global::NWorkQueue.Models.PeekMessageRequest.Parser, new[]{ "QueueId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NWorkQueue.Models.PeekMessageResponse), global::NWorkQueue.Models.PeekMessageResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageState {
    [pbr::OriginalName("Active")] Active = 0,
    [pbr::OriginalName("InTransaction")] InTransaction = 1,
    [pbr::OriginalName("Processed")] Processed = 2,
    [pbr::OriginalName("Expired")] Expired = 3,
    [pbr::OriginalName("RetryExceeded")] RetryExceeded = 4,
  }

  public enum TransactionAction {
    [pbr::OriginalName("Add")] Add = 0,
    [pbr::OriginalName("Pull")] Pull = 1,
  }

  #endregion

  #region Messages
  public sealed partial class GetQueueInfoResponse : pb::IMessage<GetQueueInfoResponse> {
    private static readonly pb::MessageParser<GetQueueInfoResponse> _parser = new pb::MessageParser<GetQueueInfoResponse>(() => new GetQueueInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQueueInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueueInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueueInfoResponse(GetQueueInfoResponse other) : this() {
      recordFound_ = other.recordFound_;
      queueId_ = other.queueId_;
      queueName_ = other.queueName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueueInfoResponse Clone() {
      return new GetQueueInfoResponse(this);
    }

    /// <summary>Field number for the "RecordFound" field.</summary>
    public const int RecordFoundFieldNumber = 1;
    private bool recordFound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RecordFound {
      get { return recordFound_; }
      set {
        recordFound_ = value;
      }
    }

    /// <summary>Field number for the "QueueId" field.</summary>
    public const int QueueIdFieldNumber = 2;
    private long queueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long QueueId {
      get { return queueId_; }
      set {
        queueId_ = value;
      }
    }

    /// <summary>Field number for the "QueueName" field.</summary>
    public const int QueueNameFieldNumber = 3;
    private string queueName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QueueName {
      get { return queueName_; }
      set {
        queueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQueueInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQueueInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecordFound != other.RecordFound) return false;
      if (QueueId != other.QueueId) return false;
      if (QueueName != other.QueueName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RecordFound != false) hash ^= RecordFound.GetHashCode();
      if (QueueId != 0L) hash ^= QueueId.GetHashCode();
      if (QueueName.Length != 0) hash ^= QueueName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RecordFound != false) {
        output.WriteRawTag(8);
        output.WriteBool(RecordFound);
      }
      if (QueueId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(QueueId);
      }
      if (QueueName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(QueueName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RecordFound != false) {
        size += 1 + 1;
      }
      if (QueueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueId);
      }
      if (QueueName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueueName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQueueInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.RecordFound != false) {
        RecordFound = other.RecordFound;
      }
      if (other.QueueId != 0L) {
        QueueId = other.QueueId;
      }
      if (other.QueueName.Length != 0) {
        QueueName = other.QueueName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RecordFound = input.ReadBool();
            break;
          }
          case 16: {
            QueueId = input.ReadInt64();
            break;
          }
          case 26: {
            QueueName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetQueueInfoByNameRequest : pb::IMessage<GetQueueInfoByNameRequest> {
    private static readonly pb::MessageParser<GetQueueInfoByNameRequest> _parser = new pb::MessageParser<GetQueueInfoByNameRequest>(() => new GetQueueInfoByNameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQueueInfoByNameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueueInfoByNameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueueInfoByNameRequest(GetQueueInfoByNameRequest other) : this() {
      queueName_ = other.queueName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueueInfoByNameRequest Clone() {
      return new GetQueueInfoByNameRequest(this);
    }

    /// <summary>Field number for the "QueueName" field.</summary>
    public const int QueueNameFieldNumber = 1;
    private string queueName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QueueName {
      get { return queueName_; }
      set {
        queueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQueueInfoByNameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQueueInfoByNameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueName != other.QueueName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueName.Length != 0) hash ^= QueueName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QueueName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueueName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQueueInfoByNameRequest other) {
      if (other == null) {
        return;
      }
      if (other.QueueName.Length != 0) {
        QueueName = other.QueueName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QueueName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetQueueInfoByIdRequest : pb::IMessage<GetQueueInfoByIdRequest> {
    private static readonly pb::MessageParser<GetQueueInfoByIdRequest> _parser = new pb::MessageParser<GetQueueInfoByIdRequest>(() => new GetQueueInfoByIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQueueInfoByIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueueInfoByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueueInfoByIdRequest(GetQueueInfoByIdRequest other) : this() {
      queueId_ = other.queueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQueueInfoByIdRequest Clone() {
      return new GetQueueInfoByIdRequest(this);
    }

    /// <summary>Field number for the "QueueId" field.</summary>
    public const int QueueIdFieldNumber = 1;
    private long queueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long QueueId {
      get { return queueId_; }
      set {
        queueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQueueInfoByIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQueueInfoByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueId != other.QueueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueId != 0L) hash ^= QueueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(QueueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQueueInfoByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.QueueId != 0L) {
        QueueId = other.QueueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QueueId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The request message containing the user's name.
  /// </summary>
  public sealed partial class CreateQueueRequest : pb::IMessage<CreateQueueRequest> {
    private static readonly pb::MessageParser<CreateQueueRequest> _parser = new pb::MessageParser<CreateQueueRequest>(() => new CreateQueueRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateQueueRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateQueueRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateQueueRequest(CreateQueueRequest other) : this() {
      queueName_ = other.queueName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateQueueRequest Clone() {
      return new CreateQueueRequest(this);
    }

    /// <summary>Field number for the "QueueName" field.</summary>
    public const int QueueNameFieldNumber = 1;
    private string queueName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QueueName {
      get { return queueName_; }
      set {
        queueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateQueueRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateQueueRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueName != other.QueueName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueName.Length != 0) hash ^= QueueName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QueueName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueueName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateQueueRequest other) {
      if (other == null) {
        return;
      }
      if (other.QueueName.Length != 0) {
        QueueName = other.QueueName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QueueName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the greetings.
  /// </summary>
  public sealed partial class CreateQueueResponse : pb::IMessage<CreateQueueResponse> {
    private static readonly pb::MessageParser<CreateQueueResponse> _parser = new pb::MessageParser<CreateQueueResponse>(() => new CreateQueueResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateQueueResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateQueueResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateQueueResponse(CreateQueueResponse other) : this() {
      queueId_ = other.queueId_;
      queueName_ = other.queueName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateQueueResponse Clone() {
      return new CreateQueueResponse(this);
    }

    /// <summary>Field number for the "QueueId" field.</summary>
    public const int QueueIdFieldNumber = 1;
    private long queueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long QueueId {
      get { return queueId_; }
      set {
        queueId_ = value;
      }
    }

    /// <summary>Field number for the "QueueName" field.</summary>
    public const int QueueNameFieldNumber = 2;
    private string queueName_ = "";
    /// <summary>
    /// Standardized Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QueueName {
      get { return queueName_; }
      set {
        queueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateQueueResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateQueueResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueId != other.QueueId) return false;
      if (QueueName != other.QueueName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueId != 0L) hash ^= QueueId.GetHashCode();
      if (QueueName.Length != 0) hash ^= QueueName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(QueueId);
      }
      if (QueueName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(QueueName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueId);
      }
      if (QueueName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueueName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateQueueResponse other) {
      if (other == null) {
        return;
      }
      if (other.QueueId != 0L) {
        QueueId = other.QueueId;
      }
      if (other.QueueName.Length != 0) {
        QueueName = other.QueueName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QueueId = input.ReadInt64();
            break;
          }
          case 18: {
            QueueName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InitializeStorageRequest : pb::IMessage<InitializeStorageRequest> {
    private static readonly pb::MessageParser<InitializeStorageRequest> _parser = new pb::MessageParser<InitializeStorageRequest>(() => new InitializeStorageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeStorageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeStorageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeStorageRequest(InitializeStorageRequest other) : this() {
      deleteExistingData_ = other.deleteExistingData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeStorageRequest Clone() {
      return new InitializeStorageRequest(this);
    }

    /// <summary>Field number for the "DeleteExistingData" field.</summary>
    public const int DeleteExistingDataFieldNumber = 1;
    private bool deleteExistingData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeleteExistingData {
      get { return deleteExistingData_; }
      set {
        deleteExistingData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeStorageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeStorageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeleteExistingData != other.DeleteExistingData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeleteExistingData != false) hash ^= DeleteExistingData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeleteExistingData != false) {
        output.WriteRawTag(8);
        output.WriteBool(DeleteExistingData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeleteExistingData != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeStorageRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeleteExistingData != false) {
        DeleteExistingData = other.DeleteExistingData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeleteExistingData = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InitializeStorageResponse : pb::IMessage<InitializeStorageResponse> {
    private static readonly pb::MessageParser<InitializeStorageResponse> _parser = new pb::MessageParser<InitializeStorageResponse>(() => new InitializeStorageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeStorageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeStorageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeStorageResponse(InitializeStorageResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeStorageResponse Clone() {
      return new InitializeStorageResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeStorageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeStorageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeStorageResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DeleteQueueByIdRequest : pb::IMessage<DeleteQueueByIdRequest> {
    private static readonly pb::MessageParser<DeleteQueueByIdRequest> _parser = new pb::MessageParser<DeleteQueueByIdRequest>(() => new DeleteQueueByIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteQueueByIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByIdRequest(DeleteQueueByIdRequest other) : this() {
      queueId_ = other.queueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByIdRequest Clone() {
      return new DeleteQueueByIdRequest(this);
    }

    /// <summary>Field number for the "QueueId" field.</summary>
    public const int QueueIdFieldNumber = 1;
    private long queueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long QueueId {
      get { return queueId_; }
      set {
        queueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteQueueByIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteQueueByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueId != other.QueueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueId != 0L) hash ^= QueueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(QueueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteQueueByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.QueueId != 0L) {
        QueueId = other.QueueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QueueId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteQueueByIdResponse : pb::IMessage<DeleteQueueByIdResponse> {
    private static readonly pb::MessageParser<DeleteQueueByIdResponse> _parser = new pb::MessageParser<DeleteQueueByIdResponse>(() => new DeleteQueueByIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteQueueByIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByIdResponse(DeleteQueueByIdResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByIdResponse Clone() {
      return new DeleteQueueByIdResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteQueueByIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteQueueByIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteQueueByIdResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DeleteQueueByNameRequest : pb::IMessage<DeleteQueueByNameRequest> {
    private static readonly pb::MessageParser<DeleteQueueByNameRequest> _parser = new pb::MessageParser<DeleteQueueByNameRequest>(() => new DeleteQueueByNameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteQueueByNameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByNameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByNameRequest(DeleteQueueByNameRequest other) : this() {
      queueName_ = other.queueName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByNameRequest Clone() {
      return new DeleteQueueByNameRequest(this);
    }

    /// <summary>Field number for the "QueueName" field.</summary>
    public const int QueueNameFieldNumber = 1;
    private string queueName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QueueName {
      get { return queueName_; }
      set {
        queueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteQueueByNameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteQueueByNameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueName != other.QueueName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueName.Length != 0) hash ^= QueueName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QueueName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueueName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteQueueByNameRequest other) {
      if (other == null) {
        return;
      }
      if (other.QueueName.Length != 0) {
        QueueName = other.QueueName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QueueName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteQueueByNameResponse : pb::IMessage<DeleteQueueByNameResponse> {
    private static readonly pb::MessageParser<DeleteQueueByNameResponse> _parser = new pb::MessageParser<DeleteQueueByNameResponse>(() => new DeleteQueueByNameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteQueueByNameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByNameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByNameResponse(DeleteQueueByNameResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteQueueByNameResponse Clone() {
      return new DeleteQueueByNameResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteQueueByNameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteQueueByNameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteQueueByNameResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class StartTransactionRequest : pb::IMessage<StartTransactionRequest> {
    private static readonly pb::MessageParser<StartTransactionRequest> _parser = new pb::MessageParser<StartTransactionRequest>(() => new StartTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTransactionRequest(StartTransactionRequest other) : this() {
      expireInMin_ = other.expireInMin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTransactionRequest Clone() {
      return new StartTransactionRequest(this);
    }

    /// <summary>Field number for the "ExpireInMin" field.</summary>
    public const int ExpireInMinFieldNumber = 1;
    private int expireInMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpireInMin {
      get { return expireInMin_; }
      set {
        expireInMin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExpireInMin != other.ExpireInMin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExpireInMin != 0) hash ^= ExpireInMin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExpireInMin != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ExpireInMin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExpireInMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpireInMin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.ExpireInMin != 0) {
        ExpireInMin = other.ExpireInMin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExpireInMin = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartTransactionResponse : pb::IMessage<StartTransactionResponse> {
    private static readonly pb::MessageParser<StartTransactionResponse> _parser = new pb::MessageParser<StartTransactionResponse>(() => new StartTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTransactionResponse(StartTransactionResponse other) : this() {
      transId_ = other.transId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTransactionResponse Clone() {
      return new StartTransactionResponse(this);
    }

    /// <summary>Field number for the "TransId" field.</summary>
    public const int TransIdFieldNumber = 1;
    private long transId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransId {
      get { return transId_; }
      set {
        transId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransId != other.TransId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransId != 0L) hash ^= TransId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TransId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.TransId != 0L) {
        TransId = other.TransId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommitTransactionRequest : pb::IMessage<CommitTransactionRequest> {
    private static readonly pb::MessageParser<CommitTransactionRequest> _parser = new pb::MessageParser<CommitTransactionRequest>(() => new CommitTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionRequest(CommitTransactionRequest other) : this() {
      transId_ = other.transId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionRequest Clone() {
      return new CommitTransactionRequest(this);
    }

    /// <summary>Field number for the "TransId" field.</summary>
    public const int TransIdFieldNumber = 1;
    private long transId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransId {
      get { return transId_; }
      set {
        transId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransId != other.TransId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransId != 0L) hash ^= TransId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TransId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.TransId != 0L) {
        TransId = other.TransId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommitTransactionResponse : pb::IMessage<CommitTransactionResponse> {
    private static readonly pb::MessageParser<CommitTransactionResponse> _parser = new pb::MessageParser<CommitTransactionResponse>(() => new CommitTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionResponse(CommitTransactionResponse other) : this() {
      messagesAdded_ = other.messagesAdded_;
      messagesPulled_ = other.messagesPulled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionResponse Clone() {
      return new CommitTransactionResponse(this);
    }

    /// <summary>Field number for the "MessagesAdded" field.</summary>
    public const int MessagesAddedFieldNumber = 1;
    private int messagesAdded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessagesAdded {
      get { return messagesAdded_; }
      set {
        messagesAdded_ = value;
      }
    }

    /// <summary>Field number for the "MessagesPulled" field.</summary>
    public const int MessagesPulledFieldNumber = 2;
    private int messagesPulled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessagesPulled {
      get { return messagesPulled_; }
      set {
        messagesPulled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessagesAdded != other.MessagesAdded) return false;
      if (MessagesPulled != other.MessagesPulled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessagesAdded != 0) hash ^= MessagesAdded.GetHashCode();
      if (MessagesPulled != 0) hash ^= MessagesPulled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessagesAdded != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MessagesAdded);
      }
      if (MessagesPulled != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MessagesPulled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessagesAdded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessagesAdded);
      }
      if (MessagesPulled != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessagesPulled);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.MessagesAdded != 0) {
        MessagesAdded = other.MessagesAdded;
      }
      if (other.MessagesPulled != 0) {
        MessagesPulled = other.MessagesPulled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessagesAdded = input.ReadInt32();
            break;
          }
          case 16: {
            MessagesPulled = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RollbackTransactionRequest : pb::IMessage<RollbackTransactionRequest> {
    private static readonly pb::MessageParser<RollbackTransactionRequest> _parser = new pb::MessageParser<RollbackTransactionRequest>(() => new RollbackTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RollbackTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackTransactionRequest(RollbackTransactionRequest other) : this() {
      transId_ = other.transId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackTransactionRequest Clone() {
      return new RollbackTransactionRequest(this);
    }

    /// <summary>Field number for the "TransId" field.</summary>
    public const int TransIdFieldNumber = 1;
    private long transId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransId {
      get { return transId_; }
      set {
        transId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RollbackTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RollbackTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransId != other.TransId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransId != 0L) hash ^= TransId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TransId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RollbackTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.TransId != 0L) {
        TransId = other.TransId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RollbackTransactionResponse : pb::IMessage<RollbackTransactionResponse> {
    private static readonly pb::MessageParser<RollbackTransactionResponse> _parser = new pb::MessageParser<RollbackTransactionResponse>(() => new RollbackTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RollbackTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackTransactionResponse(RollbackTransactionResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackTransactionResponse Clone() {
      return new RollbackTransactionResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RollbackTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RollbackTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RollbackTransactionResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class QueueMessageRequest : pb::IMessage<QueueMessageRequest> {
    private static readonly pb::MessageParser<QueueMessageRequest> _parser = new pb::MessageParser<QueueMessageRequest>(() => new QueueMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueueMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageRequest(QueueMessageRequest other) : this() {
      transId_ = other.transId_;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageRequest Clone() {
      return new QueueMessageRequest(this);
    }

    /// <summary>Field number for the "TransId" field.</summary>
    public const int TransIdFieldNumber = 1;
    private long transId_;
    /// <summary>
    /// Queue Transaction id.  All messages must be added in a transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransId {
      get { return transId_; }
      set {
        transId_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::NWorkQueue.Models.MessageIn message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NWorkQueue.Models.MessageIn Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueueMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueueMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransId != other.TransId) return false;
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransId != 0L) hash ^= TransId.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TransId);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransId);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueueMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.TransId != 0L) {
        TransId = other.TransId;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::NWorkQueue.Models.MessageIn();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransId = input.ReadInt64();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::NWorkQueue.Models.MessageIn();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageIn : pb::IMessage<MessageIn> {
    private static readonly pb::MessageParser<MessageIn> _parser = new pb::MessageParser<MessageIn>(() => new MessageIn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageIn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageIn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageIn(MessageIn other) : this() {
      queueId_ = other.queueId_;
      payload_ = other.payload_;
      metaData_ = other.metaData_;
      priority_ = other.priority_;
      maxRetries_ = other.maxRetries_;
      expiryInMinutes_ = other.expiryInMinutes_;
      correlationId_ = other.correlationId_;
      groupName_ = other.groupName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageIn Clone() {
      return new MessageIn(this);
    }

    /// <summary>Field number for the "QueueId" field.</summary>
    public const int QueueIdFieldNumber = 1;
    private long queueId_;
    /// <summary>
    /// The queue id to add the message to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long QueueId {
      get { return queueId_; }
      set {
        queueId_ = value;
      }
    }

    /// <summary>Field number for the "Payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// Message object to be serialized.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MetaData" field.</summary>
    public const int MetaDataFieldNumber = 3;
    private string metaData_ = "";
    /// <summary>
    /// String of optional data describing the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MetaData {
      get { return metaData_; }
      set {
        metaData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 4;
    private int priority_;
    /// <summary>
    /// Message priority.  Lower the number, the higher the priority.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "MaxRetries" field.</summary>
    public const int MaxRetriesFieldNumber = 5;
    private int maxRetries_;
    /// <summary>
    /// tries">How many failures before the message will be expired.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxRetries {
      get { return maxRetries_; }
      set {
        maxRetries_ = value;
      }
    }

    /// <summary>Field number for the "ExpiryInMinutes" field.</summary>
    public const int ExpiryInMinutesFieldNumber = 6;
    private int expiryInMinutes_;
    /// <summary>
    /// Message will expire after this many minutes if not already processed or in a transaction. Zero indicates no expiration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpiryInMinutes {
      get { return expiryInMinutes_; }
      set {
        expiryInMinutes_ = value;
      }
    }

    /// <summary>Field number for the "CorrelationId" field.</summary>
    public const int CorrelationIdFieldNumber = 7;
    private int correlationId_;
    /// <summary>
    /// Optional correlation id. ID's are defined by the calling application.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "GroupName" field.</summary>
    public const int GroupNameFieldNumber = 8;
    private string groupName_ = "";
    /// <summary>
    /// Optional group string. Defined by calling application.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageIn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageIn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueId != other.QueueId) return false;
      if (Payload != other.Payload) return false;
      if (MetaData != other.MetaData) return false;
      if (Priority != other.Priority) return false;
      if (MaxRetries != other.MaxRetries) return false;
      if (ExpiryInMinutes != other.ExpiryInMinutes) return false;
      if (CorrelationId != other.CorrelationId) return false;
      if (GroupName != other.GroupName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueId != 0L) hash ^= QueueId.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (MetaData.Length != 0) hash ^= MetaData.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (MaxRetries != 0) hash ^= MaxRetries.GetHashCode();
      if (ExpiryInMinutes != 0) hash ^= ExpiryInMinutes.GetHashCode();
      if (CorrelationId != 0) hash ^= CorrelationId.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(QueueId);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Payload);
      }
      if (MetaData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MetaData);
      }
      if (Priority != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Priority);
      }
      if (MaxRetries != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxRetries);
      }
      if (ExpiryInMinutes != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ExpiryInMinutes);
      }
      if (CorrelationId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CorrelationId);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GroupName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueId);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (MetaData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaData);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (MaxRetries != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRetries);
      }
      if (ExpiryInMinutes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpiryInMinutes);
      }
      if (CorrelationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CorrelationId);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageIn other) {
      if (other == null) {
        return;
      }
      if (other.QueueId != 0L) {
        QueueId = other.QueueId;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.MetaData.Length != 0) {
        MetaData = other.MetaData;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.MaxRetries != 0) {
        MaxRetries = other.MaxRetries;
      }
      if (other.ExpiryInMinutes != 0) {
        ExpiryInMinutes = other.ExpiryInMinutes;
      }
      if (other.CorrelationId != 0) {
        CorrelationId = other.CorrelationId;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QueueId = input.ReadInt64();
            break;
          }
          case 18: {
            Payload = input.ReadBytes();
            break;
          }
          case 26: {
            MetaData = input.ReadString();
            break;
          }
          case 32: {
            Priority = input.ReadInt32();
            break;
          }
          case 40: {
            MaxRetries = input.ReadInt32();
            break;
          }
          case 48: {
            ExpiryInMinutes = input.ReadInt32();
            break;
          }
          case 56: {
            CorrelationId = input.ReadInt32();
            break;
          }
          case 66: {
            GroupName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageOut : pb::IMessage<MessageOut> {
    private static readonly pb::MessageParser<MessageOut> _parser = new pb::MessageParser<MessageOut>(() => new MessageOut());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOut> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOut() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOut(MessageOut other) : this() {
      queueId_ = other.queueId_;
      payload_ = other.payload_;
      metaData_ = other.metaData_;
      priority_ = other.priority_;
      maxRetries_ = other.maxRetries_;
      expiryDateTime_ = other.expiryDateTime_ != null ? other.expiryDateTime_.Clone() : null;
      correlationId_ = other.correlationId_;
      groupName_ = other.groupName_;
      messageState_ = other.messageState_;
      addDateTime_ = other.addDateTime_ != null ? other.addDateTime_.Clone() : null;
      closeDateTime_ = other.closeDateTime_ != null ? other.closeDateTime_.Clone() : null;
      transId_ = other.transId_;
      transAction_ = other.transAction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOut Clone() {
      return new MessageOut(this);
    }

    /// <summary>Field number for the "QueueId" field.</summary>
    public const int QueueIdFieldNumber = 1;
    private long queueId_;
    /// <summary>
    /// The queue id to add the message to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long QueueId {
      get { return queueId_; }
      set {
        queueId_ = value;
      }
    }

    /// <summary>Field number for the "Payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// Message object to be serialized.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MetaData" field.</summary>
    public const int MetaDataFieldNumber = 3;
    private string metaData_ = "";
    /// <summary>
    /// String of optional data describing the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MetaData {
      get { return metaData_; }
      set {
        metaData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 4;
    private int priority_;
    /// <summary>
    /// Message priority.  Lower the number, the higher the priority.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "MaxRetries" field.</summary>
    public const int MaxRetriesFieldNumber = 5;
    private int maxRetries_;
    /// <summary>
    /// tries">How many failures before the message will be expired.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxRetries {
      get { return maxRetries_; }
      set {
        maxRetries_ = value;
      }
    }

    /// <summary>Field number for the "ExpiryDateTime" field.</summary>
    public const int ExpiryDateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiryDateTime_;
    /// <summary>
    /// Message expire after this DateTime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiryDateTime {
      get { return expiryDateTime_; }
      set {
        expiryDateTime_ = value;
      }
    }

    /// <summary>Field number for the "CorrelationId" field.</summary>
    public const int CorrelationIdFieldNumber = 7;
    private int correlationId_;
    /// <summary>
    /// Optional correlation id. ID's are defined by the calling application.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = value;
      }
    }

    /// <summary>Field number for the "GroupName" field.</summary>
    public const int GroupNameFieldNumber = 8;
    private string groupName_ = "";
    /// <summary>
    /// Optional group string. Defined by calling application.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MessageState" field.</summary>
    public const int MessageStateFieldNumber = 9;
    private global::NWorkQueue.Models.MessageState messageState_ = global::NWorkQueue.Models.MessageState.Active;
    /// <summary>
    ///State
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NWorkQueue.Models.MessageState MessageState {
      get { return messageState_; }
      set {
        messageState_ = value;
      }
    }

    /// <summary>Field number for the "AddDateTime" field.</summary>
    public const int AddDateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp addDateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AddDateTime {
      get { return addDateTime_; }
      set {
        addDateTime_ = value;
      }
    }

    /// <summary>Field number for the "CloseDateTime" field.</summary>
    public const int CloseDateTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp closeDateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CloseDateTime {
      get { return closeDateTime_; }
      set {
        closeDateTime_ = value;
      }
    }

    /// <summary>Field number for the "TransId" field.</summary>
    public const int TransIdFieldNumber = 12;
    private long transId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransId {
      get { return transId_; }
      set {
        transId_ = value;
      }
    }

    /// <summary>Field number for the "TransAction" field.</summary>
    public const int TransActionFieldNumber = 13;
    private global::NWorkQueue.Models.TransactionAction transAction_ = global::NWorkQueue.Models.TransactionAction.Add;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NWorkQueue.Models.TransactionAction TransAction {
      get { return transAction_; }
      set {
        transAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageOut);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOut other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueId != other.QueueId) return false;
      if (Payload != other.Payload) return false;
      if (MetaData != other.MetaData) return false;
      if (Priority != other.Priority) return false;
      if (MaxRetries != other.MaxRetries) return false;
      if (!object.Equals(ExpiryDateTime, other.ExpiryDateTime)) return false;
      if (CorrelationId != other.CorrelationId) return false;
      if (GroupName != other.GroupName) return false;
      if (MessageState != other.MessageState) return false;
      if (!object.Equals(AddDateTime, other.AddDateTime)) return false;
      if (!object.Equals(CloseDateTime, other.CloseDateTime)) return false;
      if (TransId != other.TransId) return false;
      if (TransAction != other.TransAction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueId != 0L) hash ^= QueueId.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (MetaData.Length != 0) hash ^= MetaData.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (MaxRetries != 0) hash ^= MaxRetries.GetHashCode();
      if (expiryDateTime_ != null) hash ^= ExpiryDateTime.GetHashCode();
      if (CorrelationId != 0) hash ^= CorrelationId.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (MessageState != global::NWorkQueue.Models.MessageState.Active) hash ^= MessageState.GetHashCode();
      if (addDateTime_ != null) hash ^= AddDateTime.GetHashCode();
      if (closeDateTime_ != null) hash ^= CloseDateTime.GetHashCode();
      if (TransId != 0L) hash ^= TransId.GetHashCode();
      if (TransAction != global::NWorkQueue.Models.TransactionAction.Add) hash ^= TransAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(QueueId);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Payload);
      }
      if (MetaData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MetaData);
      }
      if (Priority != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Priority);
      }
      if (MaxRetries != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxRetries);
      }
      if (expiryDateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExpiryDateTime);
      }
      if (CorrelationId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CorrelationId);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GroupName);
      }
      if (MessageState != global::NWorkQueue.Models.MessageState.Active) {
        output.WriteRawTag(72);
        output.WriteEnum((int) MessageState);
      }
      if (addDateTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AddDateTime);
      }
      if (closeDateTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CloseDateTime);
      }
      if (TransId != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(TransId);
      }
      if (TransAction != global::NWorkQueue.Models.TransactionAction.Add) {
        output.WriteRawTag(104);
        output.WriteEnum((int) TransAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueId);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (MetaData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaData);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (MaxRetries != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRetries);
      }
      if (expiryDateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiryDateTime);
      }
      if (CorrelationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CorrelationId);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (MessageState != global::NWorkQueue.Models.MessageState.Active) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageState);
      }
      if (addDateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddDateTime);
      }
      if (closeDateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloseDateTime);
      }
      if (TransId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransId);
      }
      if (TransAction != global::NWorkQueue.Models.TransactionAction.Add) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TransAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOut other) {
      if (other == null) {
        return;
      }
      if (other.QueueId != 0L) {
        QueueId = other.QueueId;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.MetaData.Length != 0) {
        MetaData = other.MetaData;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.MaxRetries != 0) {
        MaxRetries = other.MaxRetries;
      }
      if (other.expiryDateTime_ != null) {
        if (expiryDateTime_ == null) {
          ExpiryDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiryDateTime.MergeFrom(other.ExpiryDateTime);
      }
      if (other.CorrelationId != 0) {
        CorrelationId = other.CorrelationId;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      if (other.MessageState != global::NWorkQueue.Models.MessageState.Active) {
        MessageState = other.MessageState;
      }
      if (other.addDateTime_ != null) {
        if (addDateTime_ == null) {
          AddDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AddDateTime.MergeFrom(other.AddDateTime);
      }
      if (other.closeDateTime_ != null) {
        if (closeDateTime_ == null) {
          CloseDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CloseDateTime.MergeFrom(other.CloseDateTime);
      }
      if (other.TransId != 0L) {
        TransId = other.TransId;
      }
      if (other.TransAction != global::NWorkQueue.Models.TransactionAction.Add) {
        TransAction = other.TransAction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QueueId = input.ReadInt64();
            break;
          }
          case 18: {
            Payload = input.ReadBytes();
            break;
          }
          case 26: {
            MetaData = input.ReadString();
            break;
          }
          case 32: {
            Priority = input.ReadInt32();
            break;
          }
          case 40: {
            MaxRetries = input.ReadInt32();
            break;
          }
          case 50: {
            if (expiryDateTime_ == null) {
              ExpiryDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiryDateTime);
            break;
          }
          case 56: {
            CorrelationId = input.ReadInt32();
            break;
          }
          case 66: {
            GroupName = input.ReadString();
            break;
          }
          case 72: {
            MessageState = (global::NWorkQueue.Models.MessageState) input.ReadEnum();
            break;
          }
          case 82: {
            if (addDateTime_ == null) {
              AddDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AddDateTime);
            break;
          }
          case 90: {
            if (closeDateTime_ == null) {
              CloseDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CloseDateTime);
            break;
          }
          case 96: {
            TransId = input.ReadInt64();
            break;
          }
          case 104: {
            TransAction = (global::NWorkQueue.Models.TransactionAction) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueueMessageResponse : pb::IMessage<QueueMessageResponse> {
    private static readonly pb::MessageParser<QueueMessageResponse> _parser = new pb::MessageParser<QueueMessageResponse>(() => new QueueMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueueMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageResponse(QueueMessageResponse other) : this() {
      transId_ = other.transId_;
      messageId_ = other.messageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageResponse Clone() {
      return new QueueMessageResponse(this);
    }

    /// <summary>Field number for the "TransId" field.</summary>
    public const int TransIdFieldNumber = 1;
    private long transId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransId {
      get { return transId_; }
      set {
        transId_ = value;
      }
    }

    /// <summary>Field number for the "MessageId" field.</summary>
    public const int MessageIdFieldNumber = 2;
    private long messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueueMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueueMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransId != other.TransId) return false;
      if (MessageId != other.MessageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransId != 0L) hash ^= TransId.GetHashCode();
      if (MessageId != 0L) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TransId);
      }
      if (MessageId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransId);
      }
      if (MessageId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueueMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.TransId != 0L) {
        TransId = other.TransId;
      }
      if (other.MessageId != 0L) {
        MessageId = other.MessageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransId = input.ReadInt64();
            break;
          }
          case 16: {
            MessageId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PullMessageRequest : pb::IMessage<PullMessageRequest> {
    private static readonly pb::MessageParser<PullMessageRequest> _parser = new pb::MessageParser<PullMessageRequest>(() => new PullMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PullMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullMessageRequest(PullMessageRequest other) : this() {
      queueId_ = other.queueId_;
      transId_ = other.transId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullMessageRequest Clone() {
      return new PullMessageRequest(this);
    }

    /// <summary>Field number for the "QueueId" field.</summary>
    public const int QueueIdFieldNumber = 1;
    private long queueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long QueueId {
      get { return queueId_; }
      set {
        queueId_ = value;
      }
    }

    /// <summary>Field number for the "TransId" field.</summary>
    public const int TransIdFieldNumber = 2;
    private long transId_;
    /// <summary>
    /// 0 = all messages
    /// int32 MessageCountToRetrieve = 3;
    /// If this quantity isn't met, return no records
    ///int32 MinumumRequiredMessaages = 4;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransId {
      get { return transId_; }
      set {
        transId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PullMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PullMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueId != other.QueueId) return false;
      if (TransId != other.TransId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueId != 0L) hash ^= QueueId.GetHashCode();
      if (TransId != 0L) hash ^= TransId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(QueueId);
      }
      if (TransId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TransId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueId);
      }
      if (TransId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PullMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.QueueId != 0L) {
        QueueId = other.QueueId;
      }
      if (other.TransId != 0L) {
        TransId = other.TransId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QueueId = input.ReadInt64();
            break;
          }
          case 16: {
            TransId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PullMessageResponse : pb::IMessage<PullMessageResponse> {
    private static readonly pb::MessageParser<PullMessageResponse> _parser = new pb::MessageParser<PullMessageResponse>(() => new PullMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PullMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullMessageResponse(PullMessageResponse other) : this() {
      transId_ = other.transId_;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PullMessageResponse Clone() {
      return new PullMessageResponse(this);
    }

    /// <summary>Field number for the "TransId" field.</summary>
    public const int TransIdFieldNumber = 1;
    private long transId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransId {
      get { return transId_; }
      set {
        transId_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::NWorkQueue.Models.MessageOut message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NWorkQueue.Models.MessageOut Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PullMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PullMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransId != other.TransId) return false;
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransId != 0L) hash ^= TransId.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TransId);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransId);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PullMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.TransId != 0L) {
        TransId = other.TransId;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::NWorkQueue.Models.MessageOut();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransId = input.ReadInt64();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::NWorkQueue.Models.MessageOut();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeekMessageRequest : pb::IMessage<PeekMessageRequest> {
    private static readonly pb::MessageParser<PeekMessageRequest> _parser = new pb::MessageParser<PeekMessageRequest>(() => new PeekMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeekMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeekMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeekMessageRequest(PeekMessageRequest other) : this() {
      queueId_ = other.queueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeekMessageRequest Clone() {
      return new PeekMessageRequest(this);
    }

    /// <summary>Field number for the "QueueId" field.</summary>
    public const int QueueIdFieldNumber = 1;
    private long queueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long QueueId {
      get { return queueId_; }
      set {
        queueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeekMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeekMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueId != other.QueueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueId != 0L) hash ^= QueueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueueId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(QueueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeekMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.QueueId != 0L) {
        QueueId = other.QueueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QueueId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeekMessageResponse : pb::IMessage<PeekMessageResponse> {
    private static readonly pb::MessageParser<PeekMessageResponse> _parser = new pb::MessageParser<PeekMessageResponse>(() => new PeekMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeekMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NWorkQueue.Models.NWorkQueueReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeekMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeekMessageResponse(PeekMessageResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeekMessageResponse Clone() {
      return new PeekMessageResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeekMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeekMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeekMessageResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
